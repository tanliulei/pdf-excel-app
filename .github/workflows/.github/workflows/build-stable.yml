name: "Build Android APK - Stable Version"

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 180
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Setup Java 8
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '8'
    
    - name: Install system dependencies including AIDL
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-8-jdk python3-pip \
          autoconf libtool pkg-config zlib1g-dev libncurses5-dev \
          libncursesw5-dev cmake libffi-dev libssl-dev \
          build-essential libltdl-dev aidl android-tools-adb
    
    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        pip install cython==0.29.32
        pip install kivy==2.1.0
        pip install buildozer==1.4.0
        pip install pandas pdfplumber openpyxl xlsxwriter
    
    - name: Setup Android SDK - Legacy Stable
      run: |
        # Use older, more stable command line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
        unzip -q commandlinetools-linux-*_latest.zip
        mkdir -p $HOME/android-sdk/cmdline-tools
        mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        # Set environment variables
        export ANDROID_HOME=$HOME/android-sdk
        export JAVA_HOME=$JAVA_HOME_8_X64
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "JAVA_HOME=$JAVA_HOME_8_X64" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/android-sdk/build-tools/28.0.3" >> $GITHUB_PATH
        echo "/usr/bin" >> $GITHUB_PATH
        
        # Pre-accept licenses
        mkdir -p $HOME/android-sdk/licenses
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/android-sdk/licenses/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $HOME/android-sdk/licenses/android-sdk-license
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $HOME/android-sdk/licenses/android-sdk-license
        
        # Install stable versions that definitely include AIDL
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
          "platforms;android-28" \
          "build-tools;28.0.3" \
          "platform-tools"
        
        # Verify system AIDL
        which aidl
        aidl --version || echo "System AIDL available"
        
        # Double check SDK AIDL
        ls -la $HOME/android-sdk/build-tools/28.0.3/ | grep aidl || echo "SDK aidl check"
    
    - name: Update buildozer config for stable build
      run: |
        cat > buildozer.spec << EOF
        [app]
        title = PDF转Excel转换工具
        package.name = pdftoexcel
        package.domain = com.pdftools.converter
        source.dir = .
        source.include_exts = py,png,jpg,kv,atlas
        version = 1.0
        requirements = python3,kivy==2.1.0,pandas,pdfplumber,openpyxl,xlsxwriter
        orientation = portrait
        
        [buildozer]
        log_level = 2
        
        [android]
        fullscreen = 0
        android.permissions = READ_EXTERNAL_STORAGE,WRITE_EXTERNAL_STORAGE
        android.api = 28
        android.minapi = 21
        android.ndk = 21.4.7075529
        android.sdk = 28
        android.build_tools = 28.0.3
        android.private_storage = False
        android.accept_sdk_license = True
        EOF
    
    - name: Build APK
      run: |
        echo "Building with stable Android tools..."
        echo "AIDL location: $(which aidl)"
        buildozer android debug
    
    - name: Find and upload APK
      run: |
        echo "Searching for APK files..."
        find . -name "*.apk" -type f
        
        APK_FILE=""
        if [ -f bin/*.apk ]; then
          APK_FILE=$(ls bin/*.apk | head -1)
        elif [ -f .buildozer/android/platform/build*/outputs/apk/*/*.apk ]; then
          APK_FILE=$(find .buildozer/android/platform/build*/outputs/apk -name "*.apk" | head -1)
        fi
        
        if [ -n "$APK_FILE" ] && [ -f "$APK_FILE" ]; then
          echo "APK found: $APK_FILE"
          mkdir -p output
          cp "$APK_FILE" output/pdf-excel-converter.apk
          ls -la output/
        else
          echo "APK not found"
          exit 1
        fi
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: pdf-excel-android-app
        path: output/pdf-excel-converter.apk
        retention-days: 30

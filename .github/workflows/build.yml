name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
  push:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 180

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git zip unzip openjdk-8-jdk python3-pip autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev cmake libffi-dev libssl-dev build-essential libltdl-dev

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install cython==0.29.32
          pip install kivy==2.1.0
          pip install buildozer==1.4.0
          pip install -r requirements.txt

      - name: Setup Android SDK
        run: |
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip
          unzip -q commandlinetools-linux-*_latest.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          export ANDROID_HOME=$HOME/android-sdk
          export JAVA_HOME=$JAVA_HOME_8_X64
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "JAVA_HOME=$JAVA_HOME_8_X64" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools/31.0.0" >> $GITHUB_PATH
          mkdir -p $HOME/android-sdk/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/android-sdk/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $HOME/android-sdk/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $HOME/android-sdk/licenses/android-sdk-license
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platforms;android-31" "build-tools;31.0.0" "platform-tools" "ndk;25b"

      - name: Build APK
        run: |
          echo "Building APK..."
          buildozer android debug

      - name: Find and upload APK
        run: |
          find . -name "*.apk" -type f
          APK_FILE=""
          if [ -f bin/*.apk ]; then
            APK_FILE=$(ls bin/*.apk | head -1)
          elif [ -f .buildozer/android/platform/build*/outputs/apk/*/*.apk ]; then
            APK_FILE=$(find .buildozer/android/platform/build*/outputs/apk -name "*.apk" | head -1)
          fi
          if [ -n "$APK_FILE" ] && [ -f "$APK_FILE" ]; then
            mkdir -p output
            cp "$APK_FILE" output/pdf-excel-converter.apk
            ls -la output/
          else
            echo "APK not found"
            exit 1
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: pdf-excel-android-app
          path: output/pdf-excel-converter.apk
          retention-days: 30

name: "Build Android APK"

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip openjdk-11-jdk python3-pip \
          autoconf libtool pkg-config zlib1g-dev libncurses5-dev \
          libncursesw5-dev cmake libffi-dev libssl-dev
    
    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        pip install buildozer==1.5.0
        pip install cython==0.29.36
        pip install kivy[base]==2.1.0
        pip install pandas pdfplumber openpyxl xlsxwriter
    
    - name: Setup Android SDK
      run: |
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-*_latest.zip
        mkdir -p $HOME/android-sdk/cmdline-tools
        mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        
        export ANDROID_HOME=$HOME/android-sdk
        export JAVA_HOME=$JAVA_HOME_11_X64
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
        
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
          "platforms;android-31" \
          "build-tools;31.0.0" \
          "platform-tools" \
          "ndk;23.2.8568313"
    
    - name: Build APK with debug output
      run: |
        echo "Starting buildozer build..."
        buildozer android debug -v
        echo "Build command completed"
        
        echo "Checking for APK files..."
        find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
        
        echo "Listing bin directory..."
        ls -la bin/ 2>/dev/null || echo "No bin directory"
        
        echo "Checking buildozer output directories..."
        find .buildozer -name "*.apk" -type f 2>/dev/null || echo "No APK in .buildozer"
    
    - name: Locate and prepare APK
      run: |
        APK_PATH=""
        
        # Check multiple possible locations
        if [ -f bin/*.apk ]; then
          APK_PATH=$(ls bin/*.apk | head -1)
        elif [ -d .buildozer/android/platform ]; then
          APK_PATH=$(find .buildozer/android/platform -name "*.apk" -type f | head -1)
        fi
        
        if [ -n "$APK_PATH" ] && [ -f "$APK_PATH" ]; then
          echo "APK found at: $APK_PATH"
          mkdir -p upload
          cp "$APK_PATH" upload/pdf-excel-converter.apk
          ls -la upload/
          echo "apk_ready=true" >> $GITHUB_OUTPUT
        else
          echo "APK not found - build may have failed"
          echo "apk_ready=false" >> $GITHUB_OUTPUT
          exit 1
        fi
      id: prepare_apk
    
    - name: Upload APK
      if: steps.prepare_apk.outputs.apk_ready == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: pdf-excel-android-app
        path: upload/pdf-excel-converter.apk
        retention-days: 30
    
    - name: Upload debug logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-debug-logs
        path: |
          .buildozer/
          *.log
        retention-days: 7

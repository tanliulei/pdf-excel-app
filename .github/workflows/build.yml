name: Build Android APK

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release
  push:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 180

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-8-jdk python3-pip \
            autoconf libtool pkg-config zlib1g-dev \
            libncurses5-dev libncursesw5-dev cmake \
            libffi-dev libssl-dev build-essential \
            libltdl-dev ccache \
            aidl android-tools-adb android-tools-fastboot

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install cython==0.29.32
          pip install kivy==2.1.0
          pip install buildozer==1.4.0
          pip install -r requirements.txt

      - name: Cache buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      - name: Cache buildozer directory
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: buildozer-${{ hashFiles('buildozer.spec') }}-${{ hashFiles('requirements.txt') }}

      - name: Setup Android SDK and NDK
        run: |
          # 下载并设置Android SDK
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip
          unzip -q commandlinetools-linux-*_latest.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          mv cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          
          # 设置环境变量
          export ANDROID_HOME=$HOME/android-sdk
          export JAVA_HOME=$JAVA_HOME_8_X64
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "JAVA_HOME=$JAVA_HOME_8_X64" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/build-tools/28.0.3" >> $GITHUB_PATH

      - name: Accept Android licenses
        run: |
          mkdir -p $HOME/android-sdk/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/android-sdk/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $HOME/android-sdk/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $HOME/android-sdk/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $HOME/android-sdk/licenses/android-sdk-preview-license

      - name: Install Android SDK components
        run: |
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
            "platforms;android-28" \
            "build-tools;28.0.3" \
            "platform-tools" \
            "ndk;21.4.7075529"

      - name: Setup build environment
        run: |
          # 设置NDK路径
          export ANDROIDNDK=$HOME/android-sdk/ndk/21.4.7075529
          export ANDROIDAPI=28
          export ANDROIDMINAPI=21
          echo "ANDROIDNDK=$HOME/android-sdk/ndk/21.4.7075529" >> $GITHUB_ENV
          echo "ANDROIDAPI=28" >> $GITHUB_ENV
          echo "ANDROIDMINAPI=21" >> $GITHUB_ENV
          
          # 验证环境
          echo "=== Build Environment ==="
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROIDNDK: $ANDROIDNDK"
          echo "JAVA_HOME: $JAVA_HOME"
          echo "AIDL location: $(which aidl)"
          echo "Java version: $(java -version)"
          echo "Python version: $(python --version)"
          echo "========================="

      - name: Build APK
        run: |
          echo "Building APK..."
          buildozer android debug

      - name: Find and prepare APK
        run: |
          echo "Searching for APK files..."
          find . -name "*.apk" -type f
          
          APK_FILE=""
          # 检查多个可能的位置
          if [ -f bin/*.apk ]; then
            APK_FILE=$(ls bin/*.apk | head -1)
            echo "Found APK in bin/: $APK_FILE"
          elif [ -f .buildozer/android/platform/build*/outputs/apk/*/*.apk ]; then
            APK_FILE=$(find .buildozer/android/platform/build*/outputs/apk -name "*.apk" | head -1)
            echo "Found APK in build outputs: $APK_FILE"
          elif [ -f .buildozer/android/platform/build*/dist/*.apk ]; then
            APK_FILE=$(find .buildozer/android/platform/build*/dist -name "*.apk" | head -1)
            echo "Found APK in dist: $APK_FILE"
          fi
          
          if [ -n "$APK_FILE" ] && [ -f "$APK_FILE" ]; then
            mkdir -p output
            cp "$APK_FILE" output/pdf-excel-converter.apk
            echo "APK copied to output directory"
            ls -la output/
            
            # 获取APK信息
            APK_SIZE=$(du -h output/pdf-excel-converter.apk | cut -f1)
            echo "APK_SIZE=$APK_SIZE" >> $GITHUB_ENV
            echo "APK size: $APK_SIZE"
          else
            echo "❌ APK not found!"
            echo "Checking build logs..."
            if [ -f .buildozer/logs/buildozer.log ]; then
              echo "Last 50 lines of buildozer log:"
              tail -50 .buildozer/logs/buildozer.log
            fi
            exit 1
          fi

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf-excel-android-app-${{ github.run_number }}
          path: output/pdf-excel-converter.apk
          retention-days: 30

      - name: Upload build logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ github.run_number }}
          path: |
            .buildozer/logs/
            *.log
          retention-days: 7
